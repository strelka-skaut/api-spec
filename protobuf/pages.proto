syntax = "proto3";

package pages;

import "common.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "ApiSpec.Grpc.Pages";

service Service {
  rpc GetPage (GetPageRequest) returns (GetPageResponse);
  rpc GetPageBySiteAndPath (GetPageBySiteAndPathRequest) returns (GetPageBySiteAndPathResponse);
  rpc GetPages (GetPagesRequest) returns (GetPagesResponse);
  rpc CountPages (CountPagesRequest) returns (CountPagesResponse);

  rpc CreatePage (CreatePageRequest) returns (CreatePageResponse);
  rpc UpdatePage (UpdatePageRequest) returns (UpdatePageResponse);
  rpc DeletePage (DeletePageRequest) returns (DeletePageResponse);
}

// DTOs

message Page {
  common.Uuid id = 1;
  string name = 2;
  string content = 3;
  google.protobuf.Timestamp updated_at = 4;
  common.Uuid updated_user_id = 5;
  common.Uuid site_id = 6;
  string slug = 7;
  optional common.Uuid parent_id = 8;
  string role = 9;
}

// GetPage

message GetPageRequest {
  common.Uuid page_id = 1;
}

message GetPageResponse {
  Page page = 1;
}

// GetPageBySiteAndPath

message GetPageBySiteAndPathRequest {
  common.Uuid site_id = 1;
  string path = 2;
}

message GetPageBySiteAndPathResponse {
 Page page = 1;
}

// GetPages

message GetPagesRequest {
  optional int32 offset = 1;
  optional int32 limit = 2;

  repeated common.Sort sort = 3;
  // todo filters
}

message GetPagesResponse {
  repeated Page pages = 1;
}

// CountPages

message CountPagesRequest {
  // todo filters
}

message CountPagesResponse {
  int32 count = 1;
}

// CreatePage

message CreatePageRequest {
  string name = 1;
  string content = 2;
  common.Uuid site_id = 3;
  string slug = 4;
  optional common.Uuid parent_id = 5;
  string role = 6;
}

message CreatePageResponse {
  common.Uuid id = 1;
}

// UpdatePage

message UpdatePageRequest {
  common.Uuid page_id = 1;

  optional string name = 2;
  optional string content = 3;
  optional common.Uuid site_id = 4;
  optional string slug = 5;
  bool has_parent_id = 6;
  optional common.Uuid parent_id = 7;
  optional string role = 8;
}

message UpdatePageResponse {
}

// DeletePage

message DeletePageRequest {
  common.Uuid page_id = 1;
}

message DeletePageResponse {
}
