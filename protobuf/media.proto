syntax = "proto3";

package media;

import "common.proto";

option csharp_namespace = "ApiSpec.Grpc.Media";

service Service {
  rpc CreateGallery (CreateGalleryRequest) returns (CreateGalleryResponse);
  rpc GetGallery (GetGalleryRequest) returns (GetGalleryResponse);
  rpc GetGalleryBySlug (GetGalleryBySlugRequest) returns (GetGalleryBySlugResponse);
  rpc GetGalleries (GetGalleriesRequest) returns (GetGalleriesResponse);
  rpc UpdateGallery (UpdateGalleryRequest) returns (UpdateGalleryResponse);
  rpc DeleteGallery (DeleteGalleryRequest) returns (DeleteGalleryResponse);

  // rpc CreateGdriveFolderForGallery (CreateGdriveFolderForGalleryRequest) returns (CreateGdriveFolderForGalleryResponse);
  
  rpc GetGalleryPhotos (GetGalleryPhotosRequest) returns (GetGalleryPhotosResponse);
  rpc SyncGalleryPhotos (SyncGalleryPhotosRequest) returns (SyncGalleryPhotosResponse);
  
  rpc GetFileUrl(GetFileUrlRequest) returns (GetFileUrlResponse);
  rpc GetPhotoThumbnailUrls(GetPhotoThumbnailUrlsRequest) returns (GetPhotoThumbnailUrlsResponse);
}

// DTOs

message Gallery {
  common.Uuid id = 1;
  string name = 2;
  string slug = 3;
  string gdrive_folder_id = 4;
  optional common.Uuid site_id = 5;

  message Photo {
    common.Uuid id = 1;
    string gdrive_file_id = 2;
    int32 order = 3;
    string caption = 4;
    bool broken = 5;
  }
}

// CreateGallery

message CreateGalleryRequest {
  string name = 1;
  string slug = 2;
  string gdrive_folder_id = 3;
  optional common.Uuid site_id = 4;
}

message CreateGalleryResponse {
  common.Uuid id = 1;
}

// GetGallery

message GetGalleryRequest {
  common.Uuid gallery_id = 1;
}

message GetGalleryResponse {
  Gallery gallery = 1;
}

// GetGalleryBySlug

message GetGalleryBySlugRequest {
  string gallery_slug = 1;
}

message GetGalleryBySlugResponse {
  Gallery gallery = 1;
}

// GetGalleries

message GetGalleriesRequest {
  optional int32 offset = 1;
  optional int32 limit = 2;

  repeated common.Sort sort = 3;
  // todo filters
}

message GetGalleriesResponse {
  repeated Gallery galleries = 1;
}

// UpdateGallery

message UpdateGalleryRequest {
  common.Uuid gallery_id = 1;

  optional string name = 2;
  optional string slug = 3;
  optional string gdrive_folder_id = 4;
  bool has_site_id = 5;
  optional common.Uuid site_id = 6;
}

message UpdateGalleryResponse {

}

// DeleteGallery

message DeleteGalleryRequest {
  common.Uuid gallery_id = 1;
}

message DeleteGalleryResponse {}

// GetGalleryPhotos

message GetGalleryPhotosRequest {
  common.Uuid gallery_id = 1;
  bool include_broken = 2;
  
  
  optional int32 offset = 3;
  optional int32 limit = 4;
}

message GetGalleryPhotosResponse {
  repeated Gallery.Photo photos = 1;
}

// SyncGalleryPhotos

message SyncGalleryPhotosRequest {
  common.Uuid gallery_id = 1;
}

message SyncGalleryPhotosResponse {}

// GetFileUrl

message GetFileUrlRequest {
  string gdrive_file_id = 1;
}

message GetFileUrlResponse {
  string url = 1;
}

// GetPhotoThumbnailUrls

message GetPhotoThumbnailUrlsRequest {
  repeated string gdrive_file_ids = 1;
  oneof max_size {
    int32 width = 2;
    int32 height = 3;
  }
}

message GetPhotoThumbnailUrlsResponse {
  repeated string urls = 1;
}

// CreteGdriveFolderForGallery

message CreateGdriveFolderForGalleryRequest {
  string name = 1;
  common.Uuid site_id = 2;
}

message CreateGdriveFolderForGalleryResponse {
  string gdrive_folder_id = 1;
}
